"""update laps

Revision ID: df7b6ad9a0d5
Revises: 838e657f604e
Create Date: 2025-09-16 12:20:52.712981

"""

import warnings
from typing import TYPE_CHECKING

import sqlalchemy as sa
from alembic import op
from advanced_alchemy.types import EncryptedString, EncryptedText, GUID, ORA_JSONB, DateTimeUTC, StoredObject, PasswordHash
from sqlalchemy import Text  # noqa: F401

if TYPE_CHECKING:
    from collections.abc import Sequence

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB
sa.EncryptedString = EncryptedString
sa.EncryptedText = EncryptedText
sa.StoredObject = StoredObject

# revision identifiers, used by Alembic.
revision = 'df7b6ad9a0d5'
down_revision = '838e657f604e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()

def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()

def schema_upgrades() -> None:
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('laps', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_laps_athlete_id_athletes'), type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_laps_athlete_id_athletes'), 'athletes', ['athlete_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###

def schema_downgrades() -> None:
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('laps', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_laps_athlete_id_athletes'), type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_laps_athlete_id_athletes'), 'athletes', ['athlete_id'], ['id'])

    # ### end Alembic commands ###

def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""

def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""
