"""init

Revision ID: 838e657f604e
Revises: 
Create Date: 2025-09-14 12:12:27.904384

"""

import warnings
from typing import TYPE_CHECKING

import sqlalchemy as sa
from alembic import op
from advanced_alchemy.types import EncryptedString, EncryptedText, GUID, ORA_JSONB, DateTimeUTC, StoredObject, PasswordHash
from sqlalchemy import Text  # noqa: F401

if TYPE_CHECKING:
    from collections.abc import Sequence

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB
sa.EncryptedString = EncryptedString
sa.EncryptedText = EncryptedText
sa.StoredObject = StoredObject

# revision identifiers, used by Alembic.
revision = '838e657f604e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()

def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()

def schema_upgrades() -> None:
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('athletes',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_athletes')),
    sa.UniqueConstraint('name', name=op.f('uq_athletes_name'))
    )
    op.create_table('permissions',
    sa.Column('app', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permissions')),
    sa.UniqueConstraint('app', 'action', name='_permission_info'),
    sa.UniqueConstraint('label', name=op.f('uq_permissions_label')),
    sa.UniqueConstraint('name', name=op.f('uq_permissions_name'))
    )
    op.create_table('races',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_races')),
    sa.UniqueConstraint('name', name=op.f('uq_races_name'))
    )
    op.create_table('roles',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles')),
    sa.UniqueConstraint('label', name=op.f('uq_roles_label')),
    sa.UniqueConstraint('name', name=op.f('uq_roles_name'))
    )
    op.create_table('users',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('auth_codes',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user_id', sa.GUID(length=16), nullable=True),
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_auth_codes_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_auth_codes')),
    sa.UniqueConstraint('user_id', name=op.f('uq_auth_codes_user_id'))
    )
    op.create_table('laps',
    sa.Column('race_id', sa.GUID(length=16), nullable=False),
    sa.Column('athlete_id', sa.GUID(length=16), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTimeUTC(timezone=True), nullable=True),
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['athlete_id'], ['athletes.id'], name=op.f('fk_laps_athlete_id_athletes')),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], name=op.f('fk_laps_race_id_races'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('race_id', 'athlete_id', 'id', name=op.f('pk_laps'))
    )
    op.create_table('races_athletes',
    sa.Column('race_id', sa.GUID(length=16), nullable=False),
    sa.Column('athlete_id', sa.GUID(length=16), nullable=False),
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['athlete_id'], ['athletes.id'], name=op.f('fk_races_athletes_athlete_id_athletes')),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], name=op.f('fk_races_athletes_race_id_races'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('race_id', 'athlete_id', 'id', name=op.f('pk_races_athletes'))
    )
    op.create_table('roles_permissions',
    sa.Column('role_id', sa.GUID(length=16), nullable=False),
    sa.Column('permission_id', sa.GUID(length=16), nullable=False),
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name=op.f('fk_roles_permissions_permission_id_permissions')),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_roles_permissions_role_id_roles')),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', 'id', name=op.f('pk_roles_permissions'))
    )
    op.create_table('users_roles',
    sa.Column('user_id', sa.GUID(length=16), nullable=False),
    sa.Column('role_id', sa.GUID(length=16), nullable=False),
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_users_roles_role_id_roles')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_users_roles_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role_id', 'id', name=op.f('pk_users_roles'))
    )
    # ### end Alembic commands ###

def schema_downgrades() -> None:
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_roles')
    op.drop_table('roles_permissions')
    op.drop_table('races_athletes')
    op.drop_table('laps')
    op.drop_table('auth_codes')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('races')
    op.drop_table('permissions')
    op.drop_table('athletes')
    # ### end Alembic commands ###

def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""

def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""
