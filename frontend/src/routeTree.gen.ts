/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UsersRouteImport } from './routes/users'
import { Route as _authRouteImport } from './routes/__auth'
import { Route as _authIndexRouteImport } from './routes/__auth/index'
import { Route as AuthStartResetPasswordRouteImport } from './routes/auth/start-reset-password'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as _authRacesIndexRouteImport } from './routes/__auth/races/index'
import { Route as _authProjectsIndexRouteImport } from './routes/__auth/projects/index'
import { Route as _authProjectsNewRouteImport } from './routes/__auth/projects/new'
import { Route as _authProjectsIdRouteImport } from './routes/__auth/projects/$id'
import { Route as _authRacesIdIndexRouteImport } from './routes/__auth/races/$id/index'
import { Route as _authAdminUsersIndexRouteImport } from './routes/__auth/admin/users/index'
import { Route as _authAdminRolesIndexRouteImport } from './routes/__auth/admin/roles/index'
import { Route as _authAdminPermissionsIndexRouteImport } from './routes/__auth/admin/permissions/index'
import { Route as _authRacesIdResultsRouteImport } from './routes/__auth/races/$id/results'
import { Route as _authAdminUsersNewRouteImport } from './routes/__auth/admin/users/new'
import { Route as _authAdminUsersIdRouteImport } from './routes/__auth/admin/users/$id'
import { Route as _authAdminRolesNewRouteImport } from './routes/__auth/admin/roles/new'
import { Route as _authAdminRolesIdRouteImport } from './routes/__auth/admin/roles/$id'
import { Route as _authAdminPermissionsNewRouteImport } from './routes/__auth/admin/permissions/new'
import { Route as _authAdminPermissionsIdRouteImport } from './routes/__auth/admin/permissions/$id'

const UsersRoute = UsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRouteImport,
} as any)
const _authRoute = _authRouteImport.update({
  id: '/__auth',
  getParentRoute: () => rootRouteImport,
} as any)
const _authIndexRoute = _authIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => _authRoute,
} as any)
const AuthStartResetPasswordRoute = AuthStartResetPasswordRouteImport.update({
  id: '/auth/start-reset-password',
  path: '/auth/start-reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const _authRacesIndexRoute = _authRacesIndexRouteImport.update({
  id: '/races/',
  path: '/races/',
  getParentRoute: () => _authRoute,
} as any)
const _authProjectsIndexRoute = _authProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => _authRoute,
} as any)
const _authProjectsNewRoute = _authProjectsNewRouteImport.update({
  id: '/projects/new',
  path: '/projects/new',
  getParentRoute: () => _authRoute,
} as any)
const _authProjectsIdRoute = _authProjectsIdRouteImport.update({
  id: '/projects/$id',
  path: '/projects/$id',
  getParentRoute: () => _authRoute,
} as any)
const _authRacesIdIndexRoute = _authRacesIdIndexRouteImport.update({
  id: '/races/$id/',
  path: '/races/$id/',
  getParentRoute: () => _authRoute,
} as any)
const _authAdminUsersIndexRoute = _authAdminUsersIndexRouteImport.update({
  id: '/admin/users/',
  path: '/admin/users/',
  getParentRoute: () => _authRoute,
} as any)
const _authAdminRolesIndexRoute = _authAdminRolesIndexRouteImport.update({
  id: '/admin/roles/',
  path: '/admin/roles/',
  getParentRoute: () => _authRoute,
} as any)
const _authAdminPermissionsIndexRoute =
  _authAdminPermissionsIndexRouteImport.update({
    id: '/admin/permissions/',
    path: '/admin/permissions/',
    getParentRoute: () => _authRoute,
  } as any)
const _authRacesIdResultsRoute = _authRacesIdResultsRouteImport.update({
  id: '/races/$id/results',
  path: '/races/$id/results',
  getParentRoute: () => _authRoute,
} as any)
const _authAdminUsersNewRoute = _authAdminUsersNewRouteImport.update({
  id: '/admin/users/new',
  path: '/admin/users/new',
  getParentRoute: () => _authRoute,
} as any)
const _authAdminUsersIdRoute = _authAdminUsersIdRouteImport.update({
  id: '/admin/users/$id',
  path: '/admin/users/$id',
  getParentRoute: () => _authRoute,
} as any)
const _authAdminRolesNewRoute = _authAdminRolesNewRouteImport.update({
  id: '/admin/roles/new',
  path: '/admin/roles/new',
  getParentRoute: () => _authRoute,
} as any)
const _authAdminRolesIdRoute = _authAdminRolesIdRouteImport.update({
  id: '/admin/roles/$id',
  path: '/admin/roles/$id',
  getParentRoute: () => _authRoute,
} as any)
const _authAdminPermissionsNewRoute =
  _authAdminPermissionsNewRouteImport.update({
    id: '/admin/permissions/new',
    path: '/admin/permissions/new',
    getParentRoute: () => _authRoute,
  } as any)
const _authAdminPermissionsIdRoute = _authAdminPermissionsIdRouteImport.update({
  id: '/admin/permissions/$id',
  path: '/admin/permissions/$id',
  getParentRoute: () => _authRoute,
} as any)

export interface FileRoutesByFullPath {
  '/users': typeof UsersRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/start-reset-password': typeof AuthStartResetPasswordRoute
  '/': typeof _authIndexRoute
  '/projects/$id': typeof _authProjectsIdRoute
  '/projects/new': typeof _authProjectsNewRoute
  '/projects': typeof _authProjectsIndexRoute
  '/races': typeof _authRacesIndexRoute
  '/admin/permissions/$id': typeof _authAdminPermissionsIdRoute
  '/admin/permissions/new': typeof _authAdminPermissionsNewRoute
  '/admin/roles/$id': typeof _authAdminRolesIdRoute
  '/admin/roles/new': typeof _authAdminRolesNewRoute
  '/admin/users/$id': typeof _authAdminUsersIdRoute
  '/admin/users/new': typeof _authAdminUsersNewRoute
  '/races/$id/results': typeof _authRacesIdResultsRoute
  '/admin/permissions': typeof _authAdminPermissionsIndexRoute
  '/admin/roles': typeof _authAdminRolesIndexRoute
  '/admin/users': typeof _authAdminUsersIndexRoute
  '/races/$id': typeof _authRacesIdIndexRoute
}
export interface FileRoutesByTo {
  '/users': typeof UsersRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/start-reset-password': typeof AuthStartResetPasswordRoute
  '/': typeof _authIndexRoute
  '/projects/$id': typeof _authProjectsIdRoute
  '/projects/new': typeof _authProjectsNewRoute
  '/projects': typeof _authProjectsIndexRoute
  '/races': typeof _authRacesIndexRoute
  '/admin/permissions/$id': typeof _authAdminPermissionsIdRoute
  '/admin/permissions/new': typeof _authAdminPermissionsNewRoute
  '/admin/roles/$id': typeof _authAdminRolesIdRoute
  '/admin/roles/new': typeof _authAdminRolesNewRoute
  '/admin/users/$id': typeof _authAdminUsersIdRoute
  '/admin/users/new': typeof _authAdminUsersNewRoute
  '/races/$id/results': typeof _authRacesIdResultsRoute
  '/admin/permissions': typeof _authAdminPermissionsIndexRoute
  '/admin/roles': typeof _authAdminRolesIndexRoute
  '/admin/users': typeof _authAdminUsersIndexRoute
  '/races/$id': typeof _authRacesIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/__auth': typeof _authRouteWithChildren
  '/users': typeof UsersRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/start-reset-password': typeof AuthStartResetPasswordRoute
  '/__auth/': typeof _authIndexRoute
  '/__auth/projects/$id': typeof _authProjectsIdRoute
  '/__auth/projects/new': typeof _authProjectsNewRoute
  '/__auth/projects/': typeof _authProjectsIndexRoute
  '/__auth/races/': typeof _authRacesIndexRoute
  '/__auth/admin/permissions/$id': typeof _authAdminPermissionsIdRoute
  '/__auth/admin/permissions/new': typeof _authAdminPermissionsNewRoute
  '/__auth/admin/roles/$id': typeof _authAdminRolesIdRoute
  '/__auth/admin/roles/new': typeof _authAdminRolesNewRoute
  '/__auth/admin/users/$id': typeof _authAdminUsersIdRoute
  '/__auth/admin/users/new': typeof _authAdminUsersNewRoute
  '/__auth/races/$id/results': typeof _authRacesIdResultsRoute
  '/__auth/admin/permissions/': typeof _authAdminPermissionsIndexRoute
  '/__auth/admin/roles/': typeof _authAdminRolesIndexRoute
  '/__auth/admin/users/': typeof _authAdminUsersIndexRoute
  '/__auth/races/$id/': typeof _authRacesIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/users'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/start-reset-password'
    | '/'
    | '/projects/$id'
    | '/projects/new'
    | '/projects'
    | '/races'
    | '/admin/permissions/$id'
    | '/admin/permissions/new'
    | '/admin/roles/$id'
    | '/admin/roles/new'
    | '/admin/users/$id'
    | '/admin/users/new'
    | '/races/$id/results'
    | '/admin/permissions'
    | '/admin/roles'
    | '/admin/users'
    | '/races/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/users'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/start-reset-password'
    | '/'
    | '/projects/$id'
    | '/projects/new'
    | '/projects'
    | '/races'
    | '/admin/permissions/$id'
    | '/admin/permissions/new'
    | '/admin/roles/$id'
    | '/admin/roles/new'
    | '/admin/users/$id'
    | '/admin/users/new'
    | '/races/$id/results'
    | '/admin/permissions'
    | '/admin/roles'
    | '/admin/users'
    | '/races/$id'
  id:
    | '__root__'
    | '/__auth'
    | '/users'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/start-reset-password'
    | '/__auth/'
    | '/__auth/projects/$id'
    | '/__auth/projects/new'
    | '/__auth/projects/'
    | '/__auth/races/'
    | '/__auth/admin/permissions/$id'
    | '/__auth/admin/permissions/new'
    | '/__auth/admin/roles/$id'
    | '/__auth/admin/roles/new'
    | '/__auth/admin/users/$id'
    | '/__auth/admin/users/new'
    | '/__auth/races/$id/results'
    | '/__auth/admin/permissions/'
    | '/__auth/admin/roles/'
    | '/__auth/admin/users/'
    | '/__auth/races/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  _authRoute: typeof _authRouteWithChildren
  UsersRoute: typeof UsersRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthStartResetPasswordRoute: typeof AuthStartResetPasswordRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__auth': {
      id: '/__auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _authRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__auth/': {
      id: '/__auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof _authIndexRouteImport
      parentRoute: typeof _authRoute
    }
    '/auth/start-reset-password': {
      id: '/auth/start-reset-password'
      path: '/auth/start-reset-password'
      fullPath: '/auth/start-reset-password'
      preLoaderRoute: typeof AuthStartResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__auth/races/': {
      id: '/__auth/races/'
      path: '/races'
      fullPath: '/races'
      preLoaderRoute: typeof _authRacesIndexRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/projects/': {
      id: '/__auth/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof _authProjectsIndexRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/projects/new': {
      id: '/__auth/projects/new'
      path: '/projects/new'
      fullPath: '/projects/new'
      preLoaderRoute: typeof _authProjectsNewRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/projects/$id': {
      id: '/__auth/projects/$id'
      path: '/projects/$id'
      fullPath: '/projects/$id'
      preLoaderRoute: typeof _authProjectsIdRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/races/$id/': {
      id: '/__auth/races/$id/'
      path: '/races/$id'
      fullPath: '/races/$id'
      preLoaderRoute: typeof _authRacesIdIndexRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/admin/users/': {
      id: '/__auth/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof _authAdminUsersIndexRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/admin/roles/': {
      id: '/__auth/admin/roles/'
      path: '/admin/roles'
      fullPath: '/admin/roles'
      preLoaderRoute: typeof _authAdminRolesIndexRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/admin/permissions/': {
      id: '/__auth/admin/permissions/'
      path: '/admin/permissions'
      fullPath: '/admin/permissions'
      preLoaderRoute: typeof _authAdminPermissionsIndexRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/races/$id/results': {
      id: '/__auth/races/$id/results'
      path: '/races/$id/results'
      fullPath: '/races/$id/results'
      preLoaderRoute: typeof _authRacesIdResultsRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/admin/users/new': {
      id: '/__auth/admin/users/new'
      path: '/admin/users/new'
      fullPath: '/admin/users/new'
      preLoaderRoute: typeof _authAdminUsersNewRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/admin/users/$id': {
      id: '/__auth/admin/users/$id'
      path: '/admin/users/$id'
      fullPath: '/admin/users/$id'
      preLoaderRoute: typeof _authAdminUsersIdRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/admin/roles/new': {
      id: '/__auth/admin/roles/new'
      path: '/admin/roles/new'
      fullPath: '/admin/roles/new'
      preLoaderRoute: typeof _authAdminRolesNewRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/admin/roles/$id': {
      id: '/__auth/admin/roles/$id'
      path: '/admin/roles/$id'
      fullPath: '/admin/roles/$id'
      preLoaderRoute: typeof _authAdminRolesIdRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/admin/permissions/new': {
      id: '/__auth/admin/permissions/new'
      path: '/admin/permissions/new'
      fullPath: '/admin/permissions/new'
      preLoaderRoute: typeof _authAdminPermissionsNewRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/admin/permissions/$id': {
      id: '/__auth/admin/permissions/$id'
      path: '/admin/permissions/$id'
      fullPath: '/admin/permissions/$id'
      preLoaderRoute: typeof _authAdminPermissionsIdRouteImport
      parentRoute: typeof _authRoute
    }
  }
}

interface _authRouteChildren {
  _authIndexRoute: typeof _authIndexRoute
  _authProjectsIdRoute: typeof _authProjectsIdRoute
  _authProjectsNewRoute: typeof _authProjectsNewRoute
  _authProjectsIndexRoute: typeof _authProjectsIndexRoute
  _authRacesIndexRoute: typeof _authRacesIndexRoute
  _authAdminPermissionsIdRoute: typeof _authAdminPermissionsIdRoute
  _authAdminPermissionsNewRoute: typeof _authAdminPermissionsNewRoute
  _authAdminRolesIdRoute: typeof _authAdminRolesIdRoute
  _authAdminRolesNewRoute: typeof _authAdminRolesNewRoute
  _authAdminUsersIdRoute: typeof _authAdminUsersIdRoute
  _authAdminUsersNewRoute: typeof _authAdminUsersNewRoute
  _authRacesIdResultsRoute: typeof _authRacesIdResultsRoute
  _authAdminPermissionsIndexRoute: typeof _authAdminPermissionsIndexRoute
  _authAdminRolesIndexRoute: typeof _authAdminRolesIndexRoute
  _authAdminUsersIndexRoute: typeof _authAdminUsersIndexRoute
  _authRacesIdIndexRoute: typeof _authRacesIdIndexRoute
}

const _authRouteChildren: _authRouteChildren = {
  _authIndexRoute: _authIndexRoute,
  _authProjectsIdRoute: _authProjectsIdRoute,
  _authProjectsNewRoute: _authProjectsNewRoute,
  _authProjectsIndexRoute: _authProjectsIndexRoute,
  _authRacesIndexRoute: _authRacesIndexRoute,
  _authAdminPermissionsIdRoute: _authAdminPermissionsIdRoute,
  _authAdminPermissionsNewRoute: _authAdminPermissionsNewRoute,
  _authAdminRolesIdRoute: _authAdminRolesIdRoute,
  _authAdminRolesNewRoute: _authAdminRolesNewRoute,
  _authAdminUsersIdRoute: _authAdminUsersIdRoute,
  _authAdminUsersNewRoute: _authAdminUsersNewRoute,
  _authRacesIdResultsRoute: _authRacesIdResultsRoute,
  _authAdminPermissionsIndexRoute: _authAdminPermissionsIndexRoute,
  _authAdminRolesIndexRoute: _authAdminRolesIndexRoute,
  _authAdminUsersIndexRoute: _authAdminUsersIndexRoute,
  _authRacesIdIndexRoute: _authRacesIdIndexRoute,
}

const _authRouteWithChildren = _authRoute._addFileChildren(_authRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  _authRoute: _authRouteWithChildren,
  UsersRoute: UsersRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthStartResetPasswordRoute: AuthStartResetPasswordRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
